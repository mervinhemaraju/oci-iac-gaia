#cloud-config
# Cloud-init configuration for GitHub Actions Runner

hostname: ${hostname}
package_update: true
package_upgrade: true

users:
  - name: opc
    groups: sudo
    shell: /bin/bash
    homedir: /home/opc
    sudo: "ALL=(ALL) NOPASSWD:ALL"
    ssh_authorized_keys:
      - "${authorized_ssh_key}"

  - name: th3pl4gu3
    groups: sudo,docker
    shell: /bin/bash
    homedir: /home/th3pl4gu3
    sudo: "ALL=(ALL) NOPASSWD:ALL"
    ssh_authorized_keys:
      - "${authorized_ssh_key}"

packages:
  - curl
  - wget
  - jq
  - openssl-devel
  - git
  - nginx
  - tar
  - python3-pip
  - oci-utils
  - python39-oci-cli
  - postgresql
  - postgresql-server
  - mariadb
  - mariadb-server

write_files:
  # Set up environment variables
  - path: /etc/environment
    content: |
      GITHUB_PAT=${github_pat}
      GITHUB_ORG=plagueworks-org
      GITHUB_PERSONAL=mervinhemaraju
    append: true
    permissions: "0644"

  # Setup Python aliases
  - path: /etc/profile.d/python-aliases.sh
    permissions: "0644"
    content: |
      #!/bin/bash
      # System-wide Python aliases
      alias python=python3
      alias pip=pip3
      export PATH=$PATH:/usr/local/bin

  # Setup the postgres host based authentication config
  - path: /tmp/pg_hba_secure.conf
    owner: root:root
    permissions: "0644"
    content: |
      # TYPE  DATABASE        USER            ADDRESS                 METHOD
      # Allow postgres user to connect locally without password (admin tasks)
      local   all             postgres                                peer

      # Local connections for other users require password
      local   all             th3pl4gu3                               scram-sha-256
      local   all             all                                     scram-sha-256

      # IPv4 local connections
      host    all             postgres        127.0.0.1/32            scram-sha-256
      host    all             th3pl4gu3       127.0.0.1/32            scram-sha-256
      host    all             all             127.0.0.1/32            scram-sha-256

      # IPv6 local connections
      host    all             postgres        ::1/128                 scram-sha-256
      host    all             th3pl4gu3       ::1/128                 scram-sha-256
      host    all             all             ::1/128                 scram-sha-256

      # Reject all other connections
      host    all             all             0.0.0.0/0               reject
      host    all             all             ::/0                    reject

runcmd:
  # Disable the firewalld
  - systemctl stop firewalld
  - systemctl disable firewalld

  # Automatic growth of volume
  - /usr/libexec/oci-growfs -y

  # Set folder owners
  - chown -R th3pl4gu3:th3pl4gu3 /home/th3pl4gu3

  # Set folder owners
  - chown -R th3pl4gu3:th3pl4gu3 /home/th3pl4gu3

  # Initialize PostgreSQL database (only once!)
  - postgresql-setup --initdb

  # Apply secure configuration BEFORE starting the service
  - cp /tmp/pg_hba_secure.conf /var/lib/pgsql/data/pg_hba.conf
  - chown postgres:postgres /var/lib/pgsql/data/pg_hba.conf

  # Set password encryption method
  - echo "password_encryption = scram-sha-256" >> /var/lib/pgsql/data/postgresql.conf

  # Enable and start PostgreSQL
  - systemctl enable postgresql
  - systemctl start postgresql

  # Enable and start MariaDB
  - systemctl enable mariadb
  - systemctl start mariadb

  # Wait for services to be ready
  - sleep 5

  # PostgreSQL: Set passwords and create user
  - sudo -u postgres psql -c "ALTER USER postgres PASSWORD '${postgres_user_password}';"
  - sudo -u postgres psql -c "CREATE USER th3pl4gu3 WITH PASSWORD '${postgres_user_password}' SUPERUSER CREATEDB CREATEROLE;"

  # MariaDB: Secure installation (your existing MariaDB commands)
  - |
    mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '${mariadb_root_password}';"
    mysql -u root -p'${mariadb_root_password}' -e "DELETE FROM mysql.user WHERE User='';"
    mysql -u root -p'${mariadb_root_password}' -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
    mysql -u root -p'${mariadb_root_password}' -e "DROP DATABASE IF EXISTS test;"
    mysql -u root -p'${mariadb_root_password}' -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
    mysql -u root -p'${mariadb_root_password}' -e "CREATE USER 'th3pl4gu3'@'localhost' IDENTIFIED BY '${mariadb_root_password}';"
    mysql -u root -p'${mariadb_root_password}' -e "GRANT ALL PRIVILEGES ON *.* TO 'th3pl4gu3'@'localhost' WITH GRANT OPTION;"
    mysql -u root -p'${mariadb_root_password}' -e "CREATE USER 'th3pl4gu3'@'%' IDENTIFIED BY '${mariadb_root_password}';"
    mysql -u root -p'${mariadb_root_password}' -e "GRANT ALL PRIVILEGES ON *.* TO 'th3pl4gu3'@'%' WITH GRANT OPTION;"
    mysql -u root -p'${mariadb_root_password}' -e "FLUSH PRIVILEGES;"

  # Clean up temporary files
  - rm -f /tmp/pg_hba_secure.conf
